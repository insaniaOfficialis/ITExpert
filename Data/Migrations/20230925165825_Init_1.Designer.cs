// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230925165825_Init_1")]
    partial class Init_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entites.ClientContacts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id контакта");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint")
                        .HasComment("Id клиента");

                    b.Property<string>("ContactType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Тип контакта");

                    b.Property<string>("ContactValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Значение контакта");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientContacts", t =>
                        {
                            t.HasComment("Контакты клиента");
                        });
                });

            modelBuilder.Entity("Data.Entites.Clients", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id клиента");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Наименование клиента");

                    b.HasKey("Id");

                    b.ToTable("Clients", t =>
                        {
                            t.HasComment("Клиенты");
                        });
                });

            modelBuilder.Entity("Data.Entites.Codes", b =>
                {
                    b.Property<long>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("order_number")
                        .HasComment("Порядковый номер");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderNumber"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code")
                        .HasComment("Код");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value")
                        .HasComment("Значение кода");

                    b.HasKey("OrderNumber");

                    b.ToTable("Codes", t =>
                        {
                            t.HasComment("Коды");
                        });
                });

            modelBuilder.Entity("Data.Entites.Dates", b =>
                {
                    b.Property<DateTime>("Dt")
                        .HasColumnType("date")
                        .HasComment("Дата клиента");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id клиента");

                    b.ToTable("Dates", t =>
                        {
                            t.HasComment("Даты клиента");
                        });
                });

            modelBuilder.Entity("Data.Entites.ClientContacts", b =>
                {
                    b.HasOne("Data.Entites.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
